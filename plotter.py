import numpy as np
import pandas as pd
from matplotlib import pyplot as plt


def plot(dataframe, num_rounds=0, num_run_in_round=0):
    t = dataframe["t"]
    ctg = dataframe["ctg"]

    # Plot x[5] and x[13], the elements whose temperatures we are trying to control
    x5 = dataframe["x5"]
    x13 = dataframe["x13"]
    u0 = dataframe["u0"]
    u1 = dataframe["u1"]

    if "path_diff" in dataframe.columns:
        cst = dataframe["path_diff"]
        if cst.max() <= 0:
            cst_status = "Pass"
        else:
            cst_status = "Fail"
    else:
        cst_status = "None"

    # Check that the cost to go is equal to the Lagrangian cost integral
    # assert np.isclose(ctg.iloc[0], dataframe["L"].iloc[-1], atol=0.01)
    total_cost = round(ctg.iloc[0], 3)

    fig, axs = plt.subplots(3, constrained_layout=True)
    fig.set_size_inches(5, 10)

    axs[0].plot(t, x5, label="$x_5$")
    axs[0].plot(t, np.full(shape=(t.size,), fill_value=313), label="Constraint for $x_5$")
    axs[0].plot(t, np.full(shape=(t.size,), fill_value=303), "--", label="Setpoint for $x_5$")
    axs[0].legend()

    axs[1].plot(t, x13, label="$x_{13}$")
    axs[1].plot(t, np.full(shape=(t.size,), fill_value=333), "--", label="Setpoint for $x_{13}$")
    axs[1].legend()

    axs[2].step(t, u0, label="$u_0$")
    axs[2].step(t, u1, label="$u_1$")
    axs[2].legend()

    fig.suptitle("Control policy and system state after {} rounds of training \n "
                 "Run {}: Cost = {}, Constraint = {}"
                 .format(num_rounds, num_run_in_round, total_cost, cst_status))
    plt.xlabel("Time")

    # Save plot with autogenerated filename
    svg_filename =  "Round {} Run {} Cost {} Constraint {}" \
        .format(num_rounds, num_run_in_round, total_cost, cst_status) + ".svg"
    plt.savefig(fname=svg_filename, format="svg")

    # plt.show()
    plt.close()
    return


dataframe = pd.read_csv("R47 heatEq_240_trajectories_df.csv")
dataframes = np.split(dataframe, 360)
print(dataframes)

rnd = 0
run = 0
for df in dataframes:
    rnd = rnd % 6
    plot(df, rnd, run)
    rnd += 1
    run += 1
